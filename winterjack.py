import random
import os
import time
from datetime import datetime


# Добавляем цвета для текста
class Цвета:
    КРАСНЫЙ = "\033[91m"
    ЗЕЛЕНЫЙ = "\033[92m"
    ЖЕЛТЫЙ = "\033[93m"
    СИНИЙ = "\033[94m"
    ФИОЛЕТОВЫЙ = "\033[95m"
    ГОЛУБОЙ = "\033[96m"
    СБРОС = "\033[0m"
    ЖИРНЫЙ = "\033[1m"


# Очистка консоли
def очистить_экран():
    os.system("cls" if os.name == "nt" else "clear")


# Анимация загрузки
def анимация_раздачи():
    for _ in range(3):
        print("Раздача карт", end="")
        for _ in range(3):
            time.sleep(0.2)
            print(".", end="", flush=True)
        print("\r", end="")
    print(" " * 20 + "\r", end="")


class Достижения:
    def __init__(self):
        self.список = {
            "Новичок": False,  # Первая игра
            "Счастливчик": False,  # Выигрыш с блэкджеком
            "Богач": False,  # Накопить 5000 фишек
            "Везунчик": False,  # Выиграть 3 раза подряд
            "Храбрец": False,  # Поставить максимальную ставку
            "Стратег": False,  # Выиграть с двумя тузами
            "Снеговик": False, # Собрать 3 семерки на руке
            "Дед Мороз": False, # Выиграть в канун Нового года (31 декабря)
        }

    def проверить(self, тип, **параметры):
        if тип == "первая_игра" and not self.список["Новичок"]:
            self.список["Новичок"] = True
            return "Новичок"
        elif тип == "блэкджек" and not self.список["Счастливчик"]:
            self.список["Счастливчик"] = True
            return "Счастливчик"
        elif (
            тип == "баланс"
            and параметры.get("сумма", 0) >= 5000
            and not self.список["Богач"]
        ):
            self.список["Богач"] = True
            return "Богач"
        elif тип == "три_победы" and not self.список["Везунчик"]:
            self.список["Везунчик"] = True
            return "Везунчик"
        elif тип == "макс_ставка" and not self.список["Храбрец"]:
            self.список["Храбрец"] = True
            return "Храбрец"
        elif тип == "два_туза" and not self.список["Стратег"]:
            self.список["Стратег"] = True
            return "Стратег"
        elif тип == "три_семерки" and not self.список["Снеговик"]:
            self.список["Снеговик"] = True
            return "Снеговик"
        elif тип == "новый_год" and not self.список["Дед Мороз"]:
            self.список["Дед Мороз"] = True
            return "Дед Мороз"
        return None


class Статистика:
    def __init__(self):
        self.игр_сыграно = 0
        self.побед = 0
        self.проигрышей = 0
        self.ничьих = 0
        self.макс_выигрыш = 0
        self.макс_проигрыш = 0
        self.текущая_серия_побед = 0
        self.лучшая_серия_побед = 0

    def обновить(self, результат, сумма=0):
        self.игр_сыграно += 1
        if результат == "победа":
            self.побед += 1
            self.текущая_серия_побед += 1
            self.лучшая_серия_побед = max(
                self.текущая_серия_побед, self.лучшая_серия_побед
            )
            self.макс_выигрыш = max(self.макс_выигрыш, сумма)
        elif результат == "проигрыш":
            self.проигрышей += 1
            self.текущая_серия_побед = 0
            self.макс_проигрыш = max(self.макс_проигрыш, сумма)
        else:
            self.ничьих += 1

    def показать(self):
        print(f"\n{Цвета.ГОЛУБОЙ}═══ Статистика игрока ═══{Цвета.СБРОС}")
        print(f"Сыграно игр: {self.игр_сыграно}")
        if self.игр_сыграно > 0:
            процент_побед = (self.побед / self.игр_сыграно) * 100
            print(f"Побед: {self.побед} ({процент_побед:.1f}%)")
            print(f"Проигрышей: {self.проигрышей}")
            print(f"Ничьих: {self.ничьих}")
            print(f"Лучшая серия побед: {self.лучшая_серия_побед}")
            print(f"Максимальный выигрыш: {self.макс_выигрыш}")
            print(f"Максимальный проигрыш: {self.макс_проигрыш}")


def создать_колоду():
    номиналы = ["2", "3", "4", "5", "6", "7", "8", "9", "10", "В", "Д", "К", "Т"]
    масти = {"Червы": "♥", "Бубны": "♦", "Трефы": "♣", "Пики": "♠"}
    колода = [
        {"номинал": номинал, "масть": масть, "символ": символ}
        for номинал in номиналы
        for масть, символ in масти.items()
    ]
    random.shuffle(колода)
    return колода


def показать_карты(рука, скрыть=False):
    карты = []
    for карта in рука:
        цвет = Цвета.КРАСНЫЙ if карта["масть"] in ["Червы", "Бубны"] else Цвета.СБРОС
        if скрыть and карта == рука[1]:
            карты.append(f"{Цвета.СИНИЙ}[?]{Цвета.СБРОС}")
        else:
            карты.append(f"{цвет}{карта['номинал']}{карта['символ']}{Цвета.СБРОС}")
    return " ".join(карты)


def показать_приветствие():
    print(
        f"""
{Цвета.ЖЕЛТЫЙ}╔════════════════════════════════════════╗
║       ДОБРО ПОЖАЛОВАТЬ В        ║
║      {Цвета.КРАСНЫЙ}♠ ♥ БЛЭКДЖЕК ♣ ♦{Цвета.ЖЕЛТЫЙ}      ║
║           (ЗИМНЯЯ ВЕРСИЯ)          ║
╚════════════════════════════════════════╝{Цвета.СБРОС}
    """
    )


def показать_правила():
    print(
        f"""
{Цвета.ГОЛУБОЙ}╔═══ Правила игры ═══╗{Цвета.СБРОС}
• Цель: набрать больше очков, чем дилер, но не больше 21
• Карты от 2 до 10 стоят соответственно
• В, Д, К стоят 10 очков
• Туз может стоить 1 или 11 очков
• Дилер обязан брать карты при 16 очков и меньше
    """
    )


def посчитать_очки(рука):
    очки = 0
    тузы = 0
    for карта in рука:
        номинал = карта["номинал"]
        if номинал in ["В", "Д", "К"]:
            очки += 10
        elif номинал == "Т":
            очки += 11
            тузы += 1
        else:
            очки += int(номинал)

    while очки > 21 and тузы:
        очки -= 10
        тузы -= 1
    return очки


def проверить_специальное_событие(баланс):
    if random.random() < 0.1:  # 10% шанс на специальное событие
        события = [
            ("Счастливый час! Все выигрыши удваиваются!", 2),
            ("Страховка от проигрыша! Следующий проигрыш вернёт половину ставки.", 0.5),
            ("Бонусные фишки! +100 к балансу.", 100),
        ]
        событие = random.choice(события)
        print(f"\n{Цвета.ФИОЛЕТОВЫЙ}╔═══ Специальное событие ═══╗")
        print(f"║ {событие[0]}")
        print(f"╚════════════════════════════╝{Цвета.СБРОС}")
        return событие
    return None

# Функция для проверки на три семерки
def проверить_три_семерки(рука):
    if len(рука) == 3:
        sevens = [карта for карта in рука if карта["номинал"] == "7"]
        if len(sevens) == 3:
            return True
    return False

def блэкджек():
    очистить_экран()
    показать_приветствие()
    показать_правила()

    баланс = 1000
    статистика = Статистика()
    достижения = Достижения()

    input("\nНажмите Enter, чтобы начать игру...")
    
    достижения.проверить("первая_игра")
    print(f"\n{Цвета.ЖЕЛТЫЙ}🏆 Достижение разблокировано: Новичок!{Цвета.СБРОС}")

    while True:
        очистить_экран()
        print(f"\n{Цвета.ЗЕЛЕНЫЙ}Ваш текущий баланс: {баланс} фишек{Цвета.СБРОС}")

        спец_событие = проверить_специальное_событие(баланс)
        множитель_выигрыша = спец_событие[1] if спец_событие else 1
        
        # Проверяем, не 31 ли декабря
        сегодня = datetime.today()
        if сегодня.month == 12 and сегодня.day == 31:
            достижение = достижения.проверить("новый_год")
            if достижение:
                print(
                    f"\n{Цвета.ЖЕЛТЫЙ}🏆 Достижение разблокировано: {достижение}!{Цвета.СБРОС}"
                )

        if баланс <= 0:
            print(
                f"\n{Цвета.КРАСНЫЙ}У вас закончились фишки! Игра окончена.{Цвета.СБРОС}"
            )
            статистика.показать()
            break

        try:
            ставка = int(
                input(
                    f"\n{Цвета.ЖЕЛТЫЙ}Введите вашу ставку (0 для выхода):{Цвета.СБРОС} "
                )
            )
            if ставка == 0:
                print(
                    f"\n{Цвета.ГОЛУБОЙ}Вы закончили игру с балансом {баланс} фишек{Цвета.СБРОС}"
                )
                статистика.показать()
                return
            if ставка > баланс:
                print(
                    f"{Цвета.КРАСНЫЙ}Ставка не может превышать ваш баланс!{Цвета.СБРОС}"
                )
                continue
            if ставка <= 0:
                print(
                    f"{Цвета.КРАСНЫЙ}Ставка должна быть положительным числом!{Цвета.СБРОС}"
                )
                continue
            if ставка == баланс:
                достижение = достижения.проверить("макс_ставка")
                if достижение:
                    print(
                        f"\n{Цвета.ЖЕЛТЫЙ}🏆 Достижение разблокировано: {достижение}!{Цвета.СБРОС}"
                    )

        except ValueError:
            print(f"{Цвета.КРАСНЫЙ}Пожалуйста, введите число!{Цвета.СБРОС}")
            continue

        колода = создать_колоду()

        рука_игрока = [колода.pop(), колода.pop()]
        рука_дилера = [колода.pop(), колода.pop()]

        анимация_раздачи()

        print(f"\n{Цвета.ЗЕЛЕНЫЙ}Ваши карты:{Цвета.СБРОС}")
        print(показать_карты(рука_игрока))
        print(f"\n{Цвета.КРАСНЫЙ}Карты дилера:{Цвета.СБРОС}")
        print(показать_карты(рука_дилера, скрыть=True))

        # Ход игрока
        while True:
            очки_игрока = посчитать_очки(рука_игрока)
            print(f"\n{Цвета.ГОЛУБОЙ}Ваши очки:{Цвета.СБРОС} {очки_игрока}")

            if очки_игрока == 21:
                print(f"\n{Цвета.ЗЕЛЕНЫЙ}Блэкджек!{Цвета.СБРОС}")
                достижение = достижения.проверить("блэкджек")
                if достижение:
                    print(
                        f"\n{Цвета.ЖЕЛТЫЙ}🏆 Достижение разблокировано: {достижение}!{Цвета.СБРОС}"
                    )
                break
            
            # Проверка на три семерки
            if проверить_три_семерки(рука_игрока):
                print(f"\n{Цвета.ЗЕЛЕНЫЙ}Три семерки! Вы выиграли!{Цвета.СБРОС}")
                достижение = достижения.проверить("три_семерки")
                if достижение:
                    print(
                        f"\n{Цвета.ЖЕЛТЫЙ}🏆 Достижение разблокировано: {достижение}!{Цвета.СБРОС}"
                    )
                выигрыш = int(ставка * множитель_выигрыша * 2)  # Удваиваем выигрыш за три семерки
                баланс += выигрыш
                статистика.обновить("победа", выигрыш)
                break


            действия = "[В]зять карту, [О]статься"

            # Добавляем возможность сплита
            if (
                len(рука_игрока) == 2
                and рука_игрока[0]["номинал"] == рука_игрока[1]["номинал"]
                or (
                    рука_игрока[0]["номинал"] in ["В", "Д", "К", "10"]
                    and рука_игрока[1]["номинал"] in ["В", "Д", "К", "10"]
                )
            ):
                действия += ", [С]плит"

            # Добавляем возможность удвоения ставки
            if баланс >= ставка * 2:
                действия += ", [У]двоить ставку"

            действие = input(
                f"\n{Цвета.ЖЕЛТЫЙ}Выберите действие ({действия}):{Цвета.СБРОС} "
            ).lower()

            if действие == "в":  # Взять карту
                карта = колода.pop()
                рука_игрока.append(карта)
                print(f"\n{Цвета.ЗЕЛЕНЫЙ}Вы взяли карту:{Цвета.СБРОС}")
                print(показать_карты([карта]))
                print(f"\n{Цвета.ЗЕЛЕНЫЙ}Ваши карты:{Цвета.СБРОС}")
                print(показать_карты(рука_игрока))

                if посчитать_очки(рука_игрока) > 21:
                    print(f"\n{Цвета.КРАСНЫЙ}У вас перебор! Вы проиграли.{Цвета.СБРОС}")
                    баланс -= ставка
                    статистика.обновить("проигрыш", ставка)
                    break
            elif действие == "о":  # Остаться
                break
            elif (
                действие == "с"
                and len(рука_игрока) == 2
                and (
                    рука_игрока[0]["номинал"] == рука_игрока[1]["номинал"]
                    or (
                        рука_игрока[0]["номинал"] in ["В", "Д", "К", "10"]
                        and рука_игрока[1]["номинал"] in ["В", "Д", "К", "10"]
                    )
                )
            ):
                # Логика сплита
                print(f"\n{Цвета.ЖЕЛТЫЙ}Вы выбрали сплит!{Цвета.СБРОС}")
                рука_1 = [рука_игрока[0], колода.pop()]
                рука_2 = [рука_игрока[1], колода.pop()]
                ставка_2 = ставка
                баланс -= ставка_2

                print(f"\n{Цвета.ЗЕЛЕНЫЙ}Первая рука:{Цвета.СБРОС}")
                print(показать_карты(рука_1))
                while посчитать_очки(рука_1) <= 21:
                    действия_руки = "[В]зять карту, [О]статься"
                    if баланс >= ставка * 2:
                        действия_руки += ", [У]двоить ставку"
                    действие_руки = input(
                        f"\n{Цвета.ЖЕЛТЫЙ}Ваши действия для первой руки ({действия_руки}):{Цвета.СБРОС} "
                    ).lower()
                    if действие_руки == "в":
                        рука_1.append(колода.pop())
                        print(f"\n{Цвета.ЗЕЛЕНЫЙ}Первая рука:{Цвета.СБРОС}")
                        print(показать_карты(рука_1))
                    elif действие_руки == "о":
                        break
                    elif действие_руки == "у" and баланс >= ставка * 2:  # Удвоение ставки для первой руки
                        ставка *= 2
                        карта = колода.pop()
                        рука_1.append(карта)
                        print(f"\n{Цвета.ЗЕЛЕНЫЙ}Вы удвоили ставку для первой руки и взяли карту:{Цвета.СБРОС}")
                        print(f"{Цвета.ГОЛУБОЙ}Первая рука:{Цвета.СБРОС}")
                        print(показать_карты(рука_1))
                        break
                
                print(f"\n{Цвета.ЗЕЛЕНЫЙ}Вторая рука:{Цвета.СБРОС}")
                print(показать_карты(рука_2))
                while посчитать_очки(рука_2) <= 21:
                    действия_руки = "[В]зять карту, [О]статься"
                    if баланс >= ставка_2 * 2:
                        действия_руки += ", [У]двоить ставку"
                    действие_руки = input(
                        f"\n{Цвета.ЖЕЛТЫЙ}Ваши действия для второй руки ({действия_руки}):{Цвета.СБРОС} "
                    ).lower()
                    if действие_руки == "в":
                        рука_2.append(колода.pop())
                        print(f"\n{Цвета.ЗЕЛЕНЫЙ}Вторая рука:{Цвета.СБРОС}")
                        print(показать_карты(рука_2))
                    elif действие_руки == "о":
                        break
                    elif действие_руки == "у" and баланс >= ставка_2 * 2: # Удвоение ставки для второй руки
                        ставка_2 *= 2
                        карта = колода.pop()
                        рука_2.append(карта)
                        print(f"\n{Цвета.ЗЕЛЕНЫЙ}Вы удвоили ставку для второй руки и взяли карту:{Цвета.СБРОС}")
                        print(f"{Цвета.ГОЛУБОЙ}Вторая рука:{Цвета.СБРОС}")
                        print(показать_карты(рука_2))
                        break
                break

            elif действие == "у" and баланс >= ставка * 2:  # Удвоение ставки
                ставка *= 2
                карта = колода.pop()
                рука_игрока.append(карта)

                # Показываем карты игрока после удвоения
                print(f"\n{Цвета.ЗЕЛЕНЫЙ}Вы удвоили ставку и взяли карту:{Цвета.СБРОС}")
                print(f"{Цвета.ГОЛУБОЙ}Ваши карты:{Цвета.СБРОС}")
                print(показать_карты(рука_игрока))

                # Подсчитываем итоговые очки игрока
                очки_игрока = посчитать_очки(рука_игрока)
                print(
                    f"\n{Цвета.ГОЛУБОЙ}Ваши итоговые очки:{Цвета.СБРОС} {очки_игрока}"
                )

                # Проверяем на перебор
                if очки_игрока > 21:
                    print(f"\n{Цвета.КРАСНЫЙ}У вас перебор! Вы проиграли.{Цвета.СБРОС}")
                    баланс -= ставка
                    статистика.обновить("проигрыш", ставка)
                break  # Завершаем ход игрока
        
        # Ход дилера
        if посчитать_очки(рука_игрока) <= 21:
            print(f"\n{Цвета.КРАСНЫЙ}Карты дилера (перед его ходом):{Цвета.СБРОС}")
            print(показать_карты(рука_дилера))
            
            очки_дилера = посчитать_очки(рука_дилера)
            while очки_дилера < 17:
                time.sleep(1)  # Добавляем паузу
                карта = колода.pop()
                рука_дилера.append(карта)
                очки_дилера = посчитать_очки(рука_дилера)
                print(f"\n{Цвета.КРАСНЫЙ}Дилер берет карту:{Цвета.СБРОС}")
                print(показать_карты([карта]))
                print(f"\n{Цвета.КРАСНЫЙ}Карты дилера:{Цвета.СБРОС}")
                print(показать_карты(рука_дилера))
                print(f"Очки дилера: {очки_дилера}")

            print(f"\n{Цвета.КРАСНЫЙ}Итоговые карты дилера:{Цвета.СБРОС}")
            print(показать_карты(рука_дилера))
            print(f"Итоговые очки дилера: {очки_дилера}")

        # Подведение итогов
        # Подведение итогов для сплита
        if "рука_1" in locals():
            print(f"\n{Цвета.ГОЛУБОЙ}Итоги для первой руки:{Цвета.СБРОС}")
            очки_рука_1 = посчитать_очки(рука_1)
            очки_дилера = посчитать_очки(рука_дилера)
            if очки_рука_1 > 21:
                print(
                    f"{Цвета.КРАСНЫЙ}Первая рука проиграла (перебор).{Цвета.СБРОС}"
                )
                баланс -= ставка
            elif очки_рука_1 == 21 and len(рука_1) == 2:
                print(
                    f"{Цвета.ЗЕЛЕНЫЙ}Первая рука выиграла! Блэкджек!{Цвета.СБРОС}"
                )
                выигрыш = int(ставка * множитель_выигрыша * 1.5) # Выплата за блекджек 3 к 2
                баланс += выигрыш
            elif очки_рука_1 > очки_дилера or очки_дилера > 21:
                выигрыш = int(ставка * множитель_выигрыша)
                print(
                    f"{Цвета.ЗЕЛЕНЫЙ}Первая рука выиграла {выигрыш} фишек!{Цвета.СБРОС}"
                )
                баланс += выигрыш
            elif очки_рука_1 == очки_дилера:
                print(f"{Цвета.ЖЕЛТЫЙ}Первая рука - ничья.{Цвета.СБРОС}")
            else:
                print(f"{Цвета.КРАСНЫЙ}Первая рука проиграла.{Цвета.СБРОС}")
                баланс -= ставка

            print(f"\n{Цвета.ГОЛУБОЙ}Итоги для второй руки:{Цвета.СБРОС}")
            очки_рука_2 = посчитать_очки(рука_2)
            if очки_рука_2 > 21:
                print(
                    f"{Цвета.КРАСНЫЙ}Вторая рука проиграла (перебор).{Цвета.СБРОС}"
                )
                баланс -= ставка_2
            elif очки_рука_2 == 21 and len(рука_2) == 2:
                print(
                    f"{Цвета.ЗЕЛЕНЫЙ}Вторая рука выиграла! Блэкджек!{Цвета.СБРОС}"
                )
                выигрыш = int(ставка_2 * множитель_выигрыша * 1.5) # Выплата за блекджек 3 к 2
                баланс += выигрыш
            elif очки_рука_2 > очки_дилера or очки_дилера > 21:
                выигрыш = int(ставка_2 * множитель_выигрыша)
                print(
                    f"{Цвета.ЗЕЛЕНЫЙ}Вторая рука выиграла {выигрыш} фишек!{Цвета.СБРОС}"
                )
                баланс += выигрыш
            elif очки_рука_2 == очки_дилера:
                print(f"{Цвета.ЖЕЛТЫЙ}Вторая рука - ничья.{Цвета.СБРОС}")
            else:
                print(f"{Цвета.КРАСНЫЙ}Вторая рука проиграла.{Цвета.СБРОС}")
                баланс -= ставка_2

        # Если не было сплита, стандартное подведение итогов
        elif "рука_1" not in locals() and "рука_2" not in locals():
            очки_игрока = посчитать_очки(рука_игрока)
            очки_дилера = посчитать_очки(рука_дилера)
            
            if очки_игрока > 21:
                print(
                    f"\n{Цвета.КРАСНЫЙ}Вы проиграли (перебор).{Цвета.СБРОС}"
                )
                баланс -= ставка
                статистика.обновить("проигрыш", ставка)
            elif очки_игрока == 21 and len(рука_игрока) == 2:
                print(f"\n{Цвета.ЗЕЛЕНЫЙ}Вы выиграли! Блэкджек!{Цвета.СБРОС}")
                выигрыш = int(ставка * множитель_выигрыша * 1.5) # Выплата за блекджек 3 к 2
                баланс += выигрыш
                статистика.обновить("победа", выигрыш)

            elif очки_дилера > 21 or очки_игрока > очки_дилера:
                выигрыш = int(ставка * множитель_выигрыша)
                print(f"\n{Цвета.ЗЕЛЕНЫЙ}Вы выиграли {выигрыш} фишек!{Цвета.СБРОС}")
                баланс += выигрыш
                статистика.обновить("победа", выигрыш)
            elif очки_игрока == очки_дилера:
                print(f"\n{Цвета.ЖЕЛТЫЙ}Ничья!{Цвета.СБРОС}")
                статистика.обновить("ничья")
            else:
                print(f"\n{Цвета.КРАСНЫЙ}Вы проиграли.{Цвета.СБРОС}")
                баланс -= ставка
                статистика.обновить("проигрыш", ставка)

            # Проверка достижений после игры, если не было сплита
            if статистика.текущая_серия_побед >= 3:
                достижение = достижения.проверить("три_победы")
                if достижение:
                    print(
                        f"\n{Цвета.ЖЕЛТЫЙ}🏆 Достижение разблокировано: {достижение}!{Цвета.СБРОС}"
                    )
            if "Т" in [карта["номинал"] for карта in рука_игрока] and "Т" in [карта["номинал"] for карта in рука_дилера]:
                достижение = достижения.проверить("два_туза")
                if достижение:
                    print(
                        f"\n{Цвета.ЖЕЛТЫЙ}🏆 Достижение разблокировано: {достижение}!{Цвета.СБРОС}"
                    )
            if баланс >= 5000:
                достижение = достижения.проверить("баланс", сумма=баланс)
                if достижение:
                    print(
                        f"\n{Цвета.ЖЕЛТЫЙ}🏆 Достижение разблокировано: {достижение}!{Цвета.СБРОС}"
                    )


        # Показываем текущую статистику
        print(f"\n{Цвета.ГОЛУБОЙ}Текущий баланс: {баланс} фишек{Цвета.СБРОС}")

        выбор = input(
            f"\n{Цвета.ЖЕЛТЫЙ}Выберите действие:{Цвета.СБРОС}\n"
            f"[И]грать снова\n"
            f"[С]татистика\n"
            f"[В]ыход\n"
            f"Ваш выбор: "
        ).lower()

        if выбор == "с":
            статистика.показать()
            input("\nНажмите Enter, чтобы продолжить...")
        elif выбор == "в":
            print(
                f"\n{Цвета.ГОЛУБОЙ}Вы закончили игру с балансом {баланс} фишек{Цвета.СБРОС}"
            )
            статистика.показать()
            break
        elif выбор != "и":
            print(
                f"\n{Цвета.КРАСНЫЙ}Некорректный выбор. Продолжаем игру...{Цвета.СБРОС}"
            )

if __name__ == "__main__":
    блэкджек()